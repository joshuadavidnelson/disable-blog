name: "Integrate"

on:
  pull_request: null
  push:
    branches:
      - stable
      - develop

jobs:
  syntax-check:
    name: "Syntax check on all PHP versions"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-versions: ['7.4', '8.0', '8.1', '8.2.']
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v3"
    - name: "Install PHP"
      uses: "shivammathur/setup-php@v2"
      with:
        php-version: ${{ matrix.php }}
    - name: "PHP lint"
      run: "find *.php includes/ -type f -name '*.php' -print0 | xargs -0 -L1 -P4 -- php -l"

  coding-standard:
    name: "Check coding standard"
    runs-on: "ubuntu-latest"
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v3"
    - name: "Install PHP"
      uses: "shivammathur/setup-php@v2"
      with:
        php-version: "8.1"
    - name: "Install PHPCS"
      run: |
        composer require --no-plugins --dev wp-coding-standards/wpcs
        composer config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
        composer run post-install-cmd
    - name: "Run PHPCS"
      run: "vendor/bin/phpcs --standard=WordPress-Core *.php includes/"

  static-analysis:
    name: "Run static analysis"
    runs-on: "ubuntu-latest"
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v3"
    - name: "Install PHP"
      uses: "shivammathur/setup-php@v2"
      with:
        php-version: "8.1"
    - name: "Install PHPStan"
      run: "composer require --dev szepeviktor/phpstan-wordpress"
    - name: "Run PHPStan"
      run: "vendor/bin/phpstan analyze"

  phpunit:
    name: ${{ matrix.php-versions }} PHPUnit Tests
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-versions: [ '7.4', '8.0', '8.1' ]

    steps:
    - name: "Checkout"
      uses: "actions/checkout@v3"

    - name: "Set PHP version"
      uses: "shivammathur/setup-php@v2"
      with:
        php-version: ${{ matrix.php-versions }}
        coverage: none
        tools: phpunit, phpunit-polyfills, composer:v2
      env:
        debug: true

    - name: "Install dependencies"
      run: "composer install"

    - name: "PHPUnit Tests"
      run: './vendor/bin/phpunit'
